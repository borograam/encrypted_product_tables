<product-table>
    <div class="row bg">
        <h4 class="col-6 p-3">Название</h4>
        <h4 class="col-2 p-3">Цена</h4>
        <h4 class="col-2 p-3">Количество</h4>
        <h4 class="col-2 p-3">Стоимость</h4>
    </div>
    <div class="row border-top" each="{ (item, i) in database }">
        <div class="col-6 p-3" is="cell" note="{ item }" item="name" input="{ nameInputAttrs }" save="{ saveAndUpdate }" onclick="{ disableAddMode }"></div>
        <div class="col-2 p-3" is="cell" note="{ item }" item="price" input="{ priceInputAttrs }" save="{ saveAndUpdate }" onclick="{ disableAddMode }"></div>
        <div class="col-2 p-3" is="cell" note="{ item }" item="count" input="{ countInputAttrs }" save="{ saveAndUpdate }" onclick="{ disableAddMode }"></div>
        <div class="col-2 p-3">{ item.price * item.count }
            <button type="button" class="close mr-n5" onclick="{ remove }"><span data-num="{ i }">&times;</span></button>
        </div>
        <hr>
    </div>
    <form if="{ addMode }" onsubmit="{ add }">
        <div class="row form-group">
            <div class="col-6"><input name="name" { ...nameInputAttrs }></div>
            <div class="col-2"><input name="price" { ...priceInputAttrs }></div>
            <div class="col-2"><input name="count" { ...countInputAttrs }></div>
            <div class="col-2">
                <button type="submit" class="btn btn-outline-primary">Добавить</button>
                <button type="button" class="close mr-n5" onclick="{ disableAddMode }"><span aria-hidden="true">&times;</span></button>
            </div>
        </div>
    </form>
    <div class="row" if="{ !addMode }">
        <div class="col-12"><button class="btn btn-outline-primary btn-block" onclick="{ enableAddMode }">Добавить новую строку</button></div>
    </div>


    <script>
        export default {
            nameInputAttrs: {
                type: "text",
                class: "form-control",
                required: true
            },
            priceInputAttrs: {
                type: "text",
                class: "form-control",
                required: true,
                pattern: "\\d+([,\\.]\\d{1,2})?"
            },
            countInputAttrs: {
                type: "number",
                class: "form-control",
                required: true
            },
            onBeforeMount(props, state){
                //this.database = [{name: 1, price: 2, count: 3}];
                this.load();
                this.addMode = false;
            },
            add(e){
                e.preventDefault();
                //console.log(e);
                let note = ["name", "price", "count"]
                    .map(s => {
                        let el = e.target[s];
                        let obj = {[s]: el.value};
                        el.value = "";
                        return obj;
                    }).reduce(Object.assign, {});
                note.price = note.price.replace(",", ".");
                this.database.push(note);
                e.target.name.focus();

                this.saveAndUpdate();
                return false;
            },
            remove(e){
                this.database.splice(e.target.dataset.num, 1);
                this.saveAndUpdate();
            },
            enableAddMode(){
                this.addMode = true;
                this.update();
            },
            disableAddMode(){
                this.addMode = false;
                this.update();
            },
            save(){
                localStorage.setItem('db', JSON.stringify(this.database));
            },
            saveAndUpdate(){
                this.save();
                this.update();
            },
            load(){
                try {
                    this.database = JSON.parse(localStorage.getItem('db') || "");
                    return true;
                } catch {
                    this.database = [];
                }
                this.save();
                return false;
            }
        }
    </script>
</product-table>